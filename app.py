import streamlit as st
from oauth2client.service_account import ServiceAccountCredentials
import gspread

# ---------- GOOGLE SHEETS CONNECTION ----------
SCOPE = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
service_account_info = st.secrets["google_service_account"]
CREDS = ServiceAccountCredentials.from_json_keyfile_dict(service_account_info, SCOPE)
CLIENT = gspread.authorize(CREDS)
SHEET_NAME = "symptom_records"
sheet = CLIENT.open(SHEET_NAME).sheet1

# ---------- APP TITLE ----------
st.set_page_config(page_title="рд▓рдХреНрд╖рдг рдЖрдзрд╛рд░рд┐рдд рд░реЛрдЧ рдЬрд╛рдБрдЪ", page_icon="ЁЯзк", layout="wide")
st.title("ЁЯза рд▓рдХреНрд╖рдг рдЖрдзрд╛рд░рд┐рдд рд░реЛрдЧ рдЬрд╛рдБрдЪ")
st.write("рд▓рдХреНрд╖рдг рдЪреБрдиреЗрдВ рдФрд░ рд╕рдВрднрд╛рд╡рд┐рдд рд░реЛрдЧ/рдХреИрдВрд╕рд░ рдЬреЛрдЦрд┐рдо рджреЗрдЦреЗрдВред рдЙрдореНрд░ рдФрд░ рд▓рдХреНрд╖рдг рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдЬреЛрдЦрд┐рдо рд╕реНрдХреЛрд░ рдЕрдиреБрдорд╛рдирд┐рдд рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред")

# ---------- USER DETAILS FORM ----------
with st.form("user_form"):
    col1, col2 = st.columns(2)
    with col1:
        name = st.text_input("ЁЯСд рдкреВрд░рд╛ рдирд╛рдо")
        age = st.number_input("ЁЯОВ рдЙрдореНрд░", min_value=0, max_value=120, step=1)
        gender = st.radio("тЪз рд▓рд┐рдВрдЧ", ["рдкреБрд░реБрд╖", "рдорд╣рд┐рд▓рд╛"])
        mobile = st.text_input("ЁЯУ▒ рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░")
    with col2:
        st.subheader("ЁЯй║ рдореЗрдбрд┐рдХрд▓ рдЗрддрд┐рд╣рд╛рд╕")
        bp = st.checkbox("рдЙрдЪреНрдЪ рд░рдХреНрддрдЪрд╛рдк")
        diabetes = st.checkbox("рдбрд╛рдпрдмрд┐рдЯреАрдЬрд╝")
        heart_history = st.checkbox("рд╣реГрджрдп рд╕рдорд╕реНрдпрд╛рдПрдБ")
        location = st.text_input("ЁЯУН рд╕реНрдерд╛рди / рд╢рд╣рд░")

    st.subheader("ЁЯзН рд▓рдХреНрд╖рдг рдЪреБрдиреЗрдВ")

    # ---------- SYMPTOM LISTS ----------
    basic_symptoms = ["рдмреБрдЦрд╛рд░", "рдардВрдб рд▓рдЧрдирд╛", "рдердХрд╛рди / рдХрдордЬреЛрд░реА", "рд╕рд┐рд░рджрд░реНрдж", "рдЙрд▓реНрдЯреА / рдорд┐рдЪрд▓реА", "рдорд╛рдВрд╕рдкреЗрд╢рд┐рдпреЛрдВ / рдЬреЛрдбрд╝реЛрдВ рдореЗрдВ рджрд░реНрдж"]
    advanced_symptoms = ["рджрд╕реНрдд", "рдкреЗрдЯ рджрд░реНрдж", "рднреВрдЦ рди рд▓рдЧрдирд╛", "рджрд╛рдиреЗ / рдЪрдХрддреНрддреЗ", "рдЦрд╛рдВрд╕реА", "рдЖрдБрдЦреЛрдВ рдХреЗ рдкреАрдЫреЗ рджрд░реНрдж", "рд╕реВрдЬреЗ рд╣реБрдП рдЧреНрд░рдВрдерд┐рдпрд╛рдБ", "рдкреАрд▓реА рддреНрд╡рдЪрд╛ / рдЖрдБрдЦреЗрдВ", "рдХрдордЬреЛрд░реА"]
    
    male_cancer_symptoms = ["рд╕реНрддрдВрдн / рдореЛрдЯрд╛рдИ рдореЗрдВ рдЧрд╛рдВрда", "рдЕрд╕рд╛рдорд╛рдиреНрдп рд╕реНрддрди рд╕реНрддреНрд░рд╛рд╡", "рдкреЗрд▓реНрд╡рд┐рдХ рджрд░реНрдж / рд╕реВрдЬрди", "рдЧреБрдкреНрддрд╛рдВрдЧ / рдЯреЗрд╕реНрдЯрд┐рд╕ рдореЗрдВ рд╕реВрдЬрди", 
                            "рдЕрд╕рд╛рдорд╛рдиреНрдп рд░рдХреНрддрд╕реНрд░рд╛рд╡ / рдЪреЛрдЯ", "рд▓рдЧрд╛рддрд╛рд░ рджрд░реНрдж", "рдореБрдБрд╣ рдХреЗ рдШрд╛рд╡ / рд░рдХреНрддрд╕реНрд░рд╛рд╡ / рд╕реБрдиреНрдирддрд╛", "рд▓рдЧрд╛рддрд╛рд░ рдЦрд╛рдБрд╕реА / рдЖрд╡рд╛рдЬ рдмрджрд▓рдирд╛",
                            "рдЕрдирдЬрд╛рдиреА рд╡рдЬрди рдШрдЯрд╛рдирд╛ / рдмрдврд╝рдирд╛", "рд╕реВрдЬрди рдпрд╛ рдЧрд╛рдВрда", "рддреНрд╡рдЪрд╛ рдкрд░рд┐рд╡рд░реНрддрди / рдкреАрд▓рд╛рдкрди / рдирдП рддрд┐рд▓", "рд╕рд┐рд░рджрд░реНрдж / рджреМрд░реЗ", "рдЕрддреНрдпрдзрд┐рдХ рдердХрд╛рди", "рджреГрд╖реНрдЯрд┐ рдпрд╛ рд╕реБрдирдиреЗ рдХреА рд╕рдорд╕реНрдпрд╛рдПрдБ"]

    female_cancer_symptoms = ["рд╕реНрддрди рдореЗрдВ рдЧрд╛рдВрда / рдореЛрдЯрд╛рдИ", "рдЕрд╕рд╛рдорд╛рдиреНрдп рд╕реНрддрди рд╕реНрддреНрд░рд╛рд╡", "рдкреЗрд▓реНрд╡рд┐рдХ рджрд░реНрдж / рд╕реВрдЬрди", 
                              "рдЕрд╕рд╛рдорд╛рдиреНрдп рдпреЛрдирд┐ рд░рдХреНрддрд╕реНрд░рд╛рд╡", "рдЧрд░реНрднрд╛рд╢рдп рдЧреНрд░реАрд╡рд╛ рдХреЗ рдХреИрдВрд╕рд░ рдХреЗ рд▓рдХреНрд╖рдг (рджрд░реНрдж, рд╕реНрддреНрд░рд╛рд╡)", 
                              "рдЕрдирдЬрд╛рдиреА рд░рдХреНрддрд╕реНрд░рд╛рд╡ / рдЪреЛрдЯ", "рд▓рдЧрд╛рддрд╛рд░ рджрд░реНрдж", "рдореБрдБрд╣ рдХреЗ рдШрд╛рд╡ / рд░рдХреНрддрд╕реНрд░рд╛рд╡ / рд╕реБрдиреНрдирддрд╛", "рд▓рдЧрд╛рддрд╛рд░ рдЦрд╛рдБрд╕реА / рдЖрд╡рд╛рдЬ рдмрджрд▓рдирд╛",
                              "рдЕрдирдЬрд╛рдиреА рд╡рдЬрди рдШрдЯрд╛рдирд╛ / рдмрдврд╝рдирд╛", "рд╕реВрдЬрди рдпрд╛ рдЧрд╛рдВрда", "рддреНрд╡рдЪрд╛ рдкрд░рд┐рд╡рд░реНрддрди / рдкреАрд▓рд╛рдкрди / рдирдП рддрд┐рд▓", "рд╕рд┐рд░рджрд░реНрдж / рджреМрд░реЗ", "рдЕрддреНрдпрдзрд┐рдХ рдердХрд╛рди", "рджреГрд╖реНрдЯрд┐ рдпрд╛ рд╕реБрдирдиреЗ рдХреА рд╕рдорд╕реНрдпрд╛рдПрдБ"]

    heart_symptoms = ["рд╕реАрдиреЗ рдореЗрдВ рджрд░реНрдж / рджрдмрд╛рд╡", "рдмрд╛рдВрд╣ / рдЬрдмрдбрд╝рд╛ / рдкреАрда / рдЧрд░реНрджрди / рдЧрд▓реЗ рдореЗрдВ рджрд░реНрдж", "рд╕рд╛рдВрд╕ рд▓реЗрдиреЗ рдореЗрдВ рддрдХрд▓реАрдл", 
                      "рддреЗрдЬрд╝ / рдЕрдирд┐рдпрдорд┐рдд рд╣реГрджрдпрдЧрддрд┐", "рдкреИрд░ / рдЯрдЦрдиреЗ / рдкрд╛рдБрд╡ рдореЗрдВ рд╕реВрдЬрди", "рд╡реНрдпрд╛рдпрд╛рдо рдХрд░рдиреЗ рдХреА рдХреНрд╖рдорддрд╛ рдХрдо рд╣реЛрдирд╛",
                      "рдШрд░рдШрд░рд╛рд╣рдЯ / рд▓рдЧрд╛рддрд╛рд░ рдЦрд╛рдБрд╕реА", "рдкреЗрдЯ рдореЗрдВ рд╕реВрдЬрди", "рддреЗрдЬрд╝ рд╡рдЬрди рдмрдврд╝рдирд╛", "рдЙрд▓реНрдЯреА / рднреВрдЦ рди рд▓рдЧрдирд╛", 
                      "рдзреНрдпрд╛рди рдореЗрдВ рдХрдореА / рдЪрдХреНрдХрд░ рдЖрдирд╛", "рдардВрдбреА рдкрд╕реАрдирд╛"]

    # ---------- COLLAPSIBLE MULTISELECT ----------
    with st.expander("рдореВрд▓ рд▓рдХреНрд╖рдг"):
        selected_basic = st.multiselect("рдЪреБрдиреЗрдВ", basic_symptoms)
    with st.expander("рдЙрдиреНрдирдд рд▓рдХреНрд╖рдг"):
        selected_advanced = st.multiselect("рдЪреБрдиреЗрдВ", advanced_symptoms)
    with st.expander("рдХреИрдВрд╕рд░ рд▓рдХреНрд╖рдг"):
        if gender == "рдкреБрд░реБрд╖":
            selected_cancer = st.multiselect("рдкреБрд░реБрд╖ рдХреИрдВрд╕рд░ рд▓рдХреНрд╖рдг", male_cancer_symptoms)
        else:
            selected_cancer = st.multiselect("рдорд╣рд┐рд▓рд╛ рдХреИрдВрд╕рд░ рд▓рдХреНрд╖рдг", female_cancer_symptoms)
    with st.expander("рд╣реГрджрдп / рдХрд╛рд░реНрдбрд┐рдпреЛрд╡рд╕реНрдХреБрд▓рд░ рд▓рдХреНрд╖рдг"):
        selected_heart = st.multiselect("рдЪреБрдиреЗрдВ", heart_symptoms)

    submitted = st.form_submit_button("ЁЯФН рдЬрд╛рдБрдЪ рдХрд░реЗрдВ")

# ---------- DIAGNOSIS LOGIC ----------
def diagnose(basic, advanced, cancer, heart, age):
    possible = []
    organs = []
    risk_score = 0
    all_symptoms = basic + advanced + cancer + heart
    symptom_count = len(all_symptoms)

    # Viral / Bacterial / Fever
    if "рдмреБрдЦрд╛рд░" in basic:
        if any(s in advanced for s in ["рджрд╕реНрдд", "рджрд╛рдиреЗ / рдЪрдХрддреНрддреЗ", "рдЖрдБрдЦреЛрдВ рдХреЗ рдкреАрдЫреЗ рджрд░реНрдж"]):
            if "рджрд╛рдиреЗ / рдЪрдХрддреНрддреЗ" in advanced or "рдЖрдБрдЦреЛрдВ рдХреЗ рдкреАрдЫреЗ рджрд░реНрдж" in advanced:
                possible.append("рдбреЗрдВрдЧреВ / рд╡рд╛рдпрд░рд▓ рд╕рдВрдХреНрд░рдордг")
                organs.append("рд░рдХреНрдд / рдкреНрд░рддрд┐рд░рдХреНрд╖рд╛ рдкреНрд░рдгрд╛рд▓реА")
            elif "рджрд╕реНрдд" in advanced:
                possible.append("рдЯрд╛рдЗрдлрд╛рдЗрдб / рдмреИрдХреНрдЯреАрд░рд┐рдпрд▓ рд╕рдВрдХреНрд░рдордг")
                organs.append("рдкрд╛рдЪрди рддрдВрддреНрд░")
            else:
                possible.append("рд╡рд╛рдпрд░рд▓ рдмреБрдЦрд╛рд░")
                organs.append("рдкреНрд░рддрд┐рд░рдХреНрд╖рд╛ рдкреНрд░рдгрд╛рд▓реА")

    # Malaria
    if "рдердХрд╛рди / рдХрдордЬреЛрд░реА" in basic and "рджрд╕реНрдд" in advanced and "рдкреЗрдЯ рджрд░реНрдж" in advanced:
        possible.append("рдорд▓реЗрд░рд┐рдпрд╛")
        organs.append("рд░рдХреНрдд / рдЬрд┐рдЧрд░ / рдЬреЛрдбрд╝")

    # Cancer
    if cancer:
        possible.append("рд╕рдВрднрд╛рд╡рд┐рдд рдХреИрдВрд╕рд░")
        organs.append("рд▓рдХреНрд╖рдгреЛрдВ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдкреНрд░рднрд╛рд╡рд┐рдд рдЕрдВрдЧ")

    # Heart
    if heart:
        possible.append("рд╣реГрджрдп / рдХрд╛рд░реНрдбрд┐рдпреЛрд╡рд╕реНрдХреБрд▓рд░ рдЬреЛрдЦрд┐рдо")
        organs.append("рд╣реГрджрдп / рдкрд░рд┐рд╕рдВрдЪрд░рдг рдкреНрд░рдгрд╛рд▓реА")

    # Risk Score
    risk_score = min(100, symptom_count * 5 + (age / 2))
    return possible, organs, risk_score

# ---------- SHOW RESULTS ----------
if submitted:
    if not name or not mobile:
        st.error("рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдирд╛рдо рдФрд░ рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВред")
    else:
        results, organs, risk = diagnose(selected_basic, selected_advanced, selected_cancer, selected_heart, age)
        if results:
            st.success(f"**рд╕рдВрднрд╛рд╡рд┐рдд рд░реЛрдЧ / рдХреИрдВрд╕рд░:**")
            for r, o in zip(results, organs):
                st.write(f"ЁЯФ╕ {r} тЖТ рдкреНрд░рднрд╛рд╡рд┐рдд рдЕрдВрдЧ / рдкреНрд░рдгрд╛рд▓реА: {o}")
            st.info(f"**рдЕрдиреБрдорд╛рдирд┐рдд рдЬреЛрдЦрд┐рдо рд╕реНрдХреЛрд░:** {risk:.1f}%")
        else:
            st.info("рдЪрдпрдирд┐рдд рд▓рдХреНрд╖рдгреЛрдВ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдХреЛрдИ рдЧрдВрднреАрд░ рд░реЛрдЧ рд╕рдВрдХреЗрдд рдирд╣реАрдВ рдорд┐рд▓рд╛ред")

        # ---------- SAVE DATA TO GOOGLE SHEET ----------
        data = [
            name, age, gender, mobile, bp, diabetes, heart_history, location,
            ", ".join(selected_basic + selected_advanced + selected_cancer + selected_heart),
            ", ".join(results), ", ".join(organs), f"{risk:.1f}%"
        ]
        sheet.append_row(data)
        st.success("тЬЕ рдЖрдкрдХрд╛ рдбреЗрдЯрд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдк рд╕реЗ рд░рд┐рдХреЙрд░реНрдб рдХрд┐рдпрд╛ рдЧрдпрд╛ред")

# ---------- FOOTER ----------
st.markdown("---")
st.caption("тЪая╕П рдпрд╣ рдЙрдкрдХрд░рдг рдХреЗрд╡рд▓ рд╢реИрдХреНрд╖рд┐рдХ / рдбреЗрдореЛ рдЙрджреНрджреЗрд╢реНрдпреЛрдВ рдХреЗ рд▓рд┐рдП рд╣реИред рдпрд╣ рдкреЗрд╢реЗрд╡рд░ рдЪрд┐рдХрд┐рддреНрд╕реАрдп рд╕рд▓рд╛рд╣ рдХрд╛ рд╡рд┐рдХрд▓реНрдк рдирд╣реАрдВ рд╣реИред")
