import streamlit as st
from oauth2client.service_account import ServiceAccountCredentials
import gspread

# ---------- GOOGLE SHEETS CONNECTION ----------
SCOPE = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
service_account_info = st.secrets["google_service_account"]
CREDS = ServiceAccountCredentials.from_json_keyfile_dict(service_account_info, SCOPE)
CLIENT = gspread.authorize(CREDS)
SHEET_NAME = "symptom_records"
sheet = CLIENT.open(SHEET_NAME).sheet1

# ---------- APP TITLE ----------
st.set_page_config(page_title="рд▓рдХреНрд╖рдг рдЖрдзрд╛рд░рд┐рдд рд░реЛрдЧ рдЬрд╛рдБрдЪ", page_icon="ЁЯзк", layout="wide")
st.title("рд▓рдХреНрд╖рдг рдЖрдзрд╛рд░рд┐рдд рд░реЛрдЧ рдЬрд╛рдБрдЪ")
st.write("рдЕрдкрдиреЗ рд▓рдХреНрд╖рдг рдЪреБрдиреЗрдВ рдФрд░ рд╕рдВрднрд╛рд╡рд┐рдд рд░реЛрдЧ рдЬреЛрдЦрд┐рдо рджреЗрдЦреЗрдВред рдЙрдореНрд░ рдФрд░ рд▓рдХреНрд╖рдг рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдЬреЛрдЦрд┐рдо рд╕реНрдХреЛрд░ рдЕрдиреБрдорд╛рдирд┐рдд рд╣реИред")

# ---------- USER DETAILS FORM ----------
with st.form("user_form"):
    col1, col2 = st.columns(2)
    with col1:
        name = st.text_input("ЁЯСд рдирд╛рдо")
        age = st.number_input("ЁЯОВ рдЖрдпреБ", min_value=0, max_value=120, step=1)
        gender = st.radio("тЪз рд▓рд┐рдВрдЧ", ["рдкреБрд░реБрд╖", "рдорд╣рд┐рд▓рд╛"])
        mobile = st.text_input("ЁЯУ▒ рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░")
    with col2:
        st.subheader("ЁЯй║ рдЪрд┐рдХрд┐рддреНрд╕реАрдп рдЗрддрд┐рд╣рд╛рд╕")
        bp = st.checkbox("рдЙрдЪреНрдЪ рд░рдХреНрддрдЪрд╛рдк")
        diabetes = st.checkbox("рдбрд╛рдпрдмрд┐рдЯреАрдЬрд╝")
        heart = st.checkbox("рд╣реГрджрдп рд░реЛрдЧ")
        location = st.text_input("ЁЯУН рд╕реНрдерд╛рди / рд╢рд╣рд░")

    st.subheader("ЁЯзН рд▓рдХреНрд╖рдг рдЪреБрдиреЗрдВ")

    # ---------- SYMPTOM LISTS ----------
    # Basic Viral / Fever Symptoms
    basic_symptoms = [
        "рдмреБрдЦрд╛рд░", "рд╕рд░реНрджреА / рдардВрдб рд▓рдЧрдирд╛", "рдердХрд╛рди / рдХрдордЬреЛрд░реА", "рд╕рд░рджрд░реНрдж", "рдорд┐рдЪрд▓реА / рдЙрд▓реНрдЯреА", "рдорд╛рдВрд╕рдкреЗрд╢рд┐рдпреЛрдВ / рдЬреЛрдбрд╝реЛрдВ рдореЗрдВ рджрд░реНрдж"
    ]

    # Advanced Symptoms (Viral / Bacterial / Malaria / Dengue / Jaundice)
    advanced_symptoms = [
        "рджрд╕реНрдд", "рдкреЗрдЯ рджрд░реНрдж", "рднреВрдЦ рдХрдо рд╣реЛрдирд╛", "рдЪрдХрддреНрддреЗрджрд╛рд░ рджрд╛рдиреЗ / рджрд╛рдиреЗ", "рдЦрд╛рдВрд╕реА", 
        "рдЖрдБрдЦ рдХреЗ рдкреАрдЫреЗ рджрд░реНрдж", "рд╕реВрдЬреА рд╣реБрдИ рдЧреНрд░рдВрдерд┐рдпрд╛рдБ", "рдкреАрд▓реА рддреНрд╡рдЪрд╛ / рдЖрдБрдЦреЗрдВ", "рдХрдордЬрд╝реЛрд░реА"
    ]

    # Heart Symptoms
    heart_symptoms = [
        "рд╕реАрдиреЗ рдореЗрдВ рджрд░реНрдж / рджрдмрд╛рд╡", "рдмрд╛рдБрд╣ / рдЬрдмрдбрд╝рд╛ / рдкреАрда / рдЧрд░реНрджрди / рдЧрд▓рд╛ рдореЗрдВ рджрд░реНрдж", 
        "рд╕рд╛рдБрд╕ рд▓реЗрдиреЗ рдореЗрдВ рдХрдард┐рдирд╛рдИ", "рддреЗрдЬрд╝ / рдЕрдирд┐рдпрдорд┐рдд рд╣реГрджрдп рдЧрддрд┐", "рдкрд╛рдБрд╡ / рдЯрдЦрдиреЗ / рдкреИрд░ рдореЗрдВ рд╕реВрдЬрди",
        "рд╡реНрдпрд╛рдпрд╛рдо рдХрд░рдиреЗ рдХреА рдХреНрд╖рдорддрд╛ рдХрдо рд╣реЛрдирд╛", "рдШрдмрд░рд╛рд╣рдЯ / рд▓рдЧрд╛рддрд╛рд░ рдЦрд╛рдБрд╕реА", "рдкреЗрдЯ рдореЗрдВ рд╕реВрдЬрди",
        "рддреЗрдЬрд╝ рд╡рдЬрди рдмрдврд╝рдирд╛", "рдЙрд▓реНрдЯреА / рднреВрдЦ рдХреА рдХрдореА", "рдзреНрдпрд╛рди рдХреЗрдВрджреНрд░рд┐рдд рдХрд░рдиреЗ рдореЗрдВ рдХрдард┐рдирд╛рдИ", 
        "рдЪрдХреНрдХрд░ / рдмреЗрд╣реЛрд╢реА", "рдардВрдбреА рдкрд╕реАрдирд╛"
    ]

    # Male Cancer Symptoms
    male_cancer_symptoms = [
        "рд╕реНрддрди рдореЗрдВ рдЧрд╛рдВрда / рдореЛрдЯрд╛рдИ", "рдЕрд╕рд╛рдорд╛рдиреНрдп рд╕реНрддрди рд╕реНрддреНрд░рд╛рд╡", "рдкреЗрд▓реНрд╡рд┐рдХ рджрд░реНрдж / рд╕реВрдЬрди",
        "рдкреЗрдЯ рдореЗрдВ рджрд░реНрдж / рд╕реВрдЬрди", "рдкреНрд░реЛрд╕реНрдЯреЗрдЯ рд╕рдорд╕реНрдпрд╛рдПрдБ", "рдЕрдВрдбрдХреЛрд╖ рдореЗрдВ рдЧрд╛рдВрда / рд╕реВрдЬрди",
        "рдЕрд╕рд╛рдорд╛рдиреНрдп рд░рдХреНрддрд╕реНрд░рд╛рд╡ / рдЪреЛрдЯ", "рджрд░реНрдж рдЬреЛ рдЪрд▓рд╛ рдирд╣реАрдВ рдЬрд╛рддрд╛", "рдореБрдБрд╣ рдореЗрдВ рдШрд╛рд╡ / рд░рдХреНрдд / рд╕реБрдиреНрдирдкрди",
        "рд▓рдЧрд╛рддрд╛рд░ рдЦрд╛рдБрд╕реА / рдЖрд╡рд╛рдЬ рдореЗрдВ рдмрджрд▓рд╛рд╡", "рдЕрдирдЪрд╛рд╣рд╛ рд╡рдЬрди рдХрдо / рдЬреНрдпрд╛рджрд╛ рд╣реЛрдирд╛", "рд╕реВрдЬрди рдпрд╛ рдЧрд╛рдВрда",
        "рддреНрд╡рдЪрд╛ рдореЗрдВ рдмрджрд▓рд╛рд╡ / рдкреАрд▓рд╛рдкрди / рдирдП рддрд┐рд▓", "рд╕рд░рджрд░реНрдж / рджреМрд░реЗ", "рдЕрддреНрдпрдзрд┐рдХ рдердХрд╛рди / рдХрдордЬреЛрд░реА",
        "рджреГрд╖реНрдЯрд┐ рдпрд╛ рд╕реБрдирдиреЗ рдореЗрдВ рд╕рдорд╕реНрдпрд╛"
    ]

    # Female Cancer Symptoms
    female_cancer_symptoms = [
        "рд╕реНрддрди рдореЗрдВ рдЧрд╛рдВрда / рдореЛрдЯрд╛рдИ", "рдЕрд╕рд╛рдорд╛рдиреНрдп рд╕реНрддрди рд╕реНрддреНрд░рд╛рд╡", "рдкреЗрд▓реНрд╡рд┐рдХ рджрд░реНрдж / рд╕реВрдЬрди",
        "рдЕрд╕рд╛рдорд╛рдиреНрдп рдпреЛрдирд┐ рд░рдХреНрддрд╕реНрд░рд╛рд╡", "рдЧрд░реНрднрд╛рд╢рдп рдЧреНрд░реАрд╡рд╛ рдХреЗ рдХреИрдВрд╕рд░ рд▓рдХреНрд╖рдг", "рдкреЗрдЯ рдореЗрдВ рджрд░реНрдж / рд╕реВрдЬрди",
        "рдЕрд╕рд╛рдорд╛рдиреНрдп рд░рдХреНрддрд╕реНрд░рд╛рд╡ / рдЪреЛрдЯ", "рджрд░реНрдж рдЬреЛ рдЪрд▓рд╛ рдирд╣реАрдВ рдЬрд╛рддрд╛", "рдореБрдБрд╣ рдореЗрдВ рдШрд╛рд╡ / рд░рдХреНрдд / рд╕реБрдиреНрдирдкрди",
        "рд▓рдЧрд╛рддрд╛рд░ рдЦрд╛рдБрд╕реА / рдЖрд╡рд╛рдЬ рдореЗрдВ рдмрджрд▓рд╛рд╡", "рдЕрдирдЪрд╛рд╣рд╛ рд╡рдЬрди рдХрдо / рдЬреНрдпрд╛рджрд╛ рд╣реЛрдирд╛", "рд╕реВрдЬрди рдпрд╛ рдЧрд╛рдВрда",
        "рддреНрд╡рдЪрд╛ рдореЗрдВ рдмрджрд▓рд╛рд╡ / рдкреАрд▓рд╛рдкрди / рдирдП рддрд┐рд▓", "рд╕рд░рджрд░реНрдж / рджреМрд░реЗ", "рдЕрддреНрдпрдзрд┐рдХ рдердХрд╛рди / рдХрдордЬреЛрд░реА",
        "рджреГрд╖реНрдЯрд┐ рдпрд╛ рд╕реБрдирдиреЗ рдореЗрдВ рд╕рдорд╕реНрдпрд╛"
    ]

    # ---------- USER INPUT ----------
    selected_basic = st.multiselect("рдмреБрдирд┐рдпрд╛рджреА рд▓рдХреНрд╖рдг", basic_symptoms)
    selected_advanced = st.multiselect("рдЙрдиреНрдирдд рд▓рдХреНрд╖рдг", advanced_symptoms)
    
    st.subheader("ЁЯзм рдХреИрдВрд╕рд░ рд▓рдХреНрд╖рдг")
    if gender == "рдкреБрд░реБрд╖":
        selected_cancer = st.multiselect("рдкреБрд░реБрд╖ рдХреИрдВрд╕рд░ рд▓рдХреНрд╖рдг", male_cancer_symptoms)
    else:
        selected_cancer = st.multiselect("рдорд╣рд┐рд▓рд╛ рдХреИрдВрд╕рд░ рд▓рдХреНрд╖рдг", female_cancer_symptoms)
        
    selected_heart = st.multiselect("рд╣реГрджрдп / рдХрд╛рд░реНрдбрд┐рдпреЛрд╡реИрд╕реНрдХреБрд▓рд░ рд▓рдХреНрд╖рдг", heart_symptoms)

    submitted = st.form_submit_button("ЁЯФН рдЬрд╛рдБрдЪ рдХрд░реЗрдВ")

# ---------- DIAGNOSIS LOGIC ----------
def diagnose(basic, advanced, cancer, heart, age):
    possible = []
    organs = []
    risk_score = 0

    all_symptoms = basic + advanced + cancer + heart
    symptom_count = len(all_symptoms)

    # ---------- Viral / Fever / Bacterial ----------
    if "рдмреБрдЦрд╛рд░" in basic:
        if any(s in advanced for s in ["рджрд╕реНрдд", "рдЪрдХрддреНрддреЗрджрд╛рд░ рджрд╛рдиреЗ / рджрд╛рдиреЗ", "рдЖрдБрдЦ рдХреЗ рдкреАрдЫреЗ рджрд░реНрдж"]):
            if "рдЪрдХрддреНрддреЗрджрд╛рд░ рджрд╛рдиреЗ / рджрд╛рдиреЗ" in advanced or "рдЖрдБрдЦ рдХреЗ рдкреАрдЫреЗ рджрд░реНрдж" in advanced:
                possible.append("рдбреЗрдВрдЧреВ / рд╡рд╛рдпрд░рд▓ рд╕рдВрдХреНрд░рдордг")
                organs.append("рд░рдХреНрдд / рдкреНрд░рддрд┐рд░рдХреНрд╖рд╛ рдкреНрд░рдгрд╛рд▓реА")
            elif "рджрд╕реНрдд" in advanced:
                possible.append("рдЯрд╛рдЗрдлрд╛рдЗрдб / рдмреИрдХреНрдЯреАрд░рд┐рдпрд▓ рд╕рдВрдХреНрд░рдордг")
                organs.append("рдкрд╛рдЪрди рддрдВрддреНрд░")
            else:
                possible.append("рд╡рд╛рдпрд░рд▓ рдмреБрдЦрд╛рд░")
                organs.append("рдкреНрд░рддрд┐рд░рдХреНрд╖рд╛ рдкреНрд░рдгрд╛рд▓реА")

    # ---------- Malaria ----------
    if "рдердХрд╛рди / рдХрдордЬреЛрд░реА" in basic and "рджрд╕реНрдд" in advanced and "рдкреЗрдЯ рджрд░реНрдж" in advanced:
        possible.append("рдорд▓реЗрд░рд┐рдпрд╛")
        organs.append("рд░рдХреНрдд / рдЬрд┐рдЧрд░ / рдЬреЛрдбрд╝реЛрдВ")

    # ---------- Cancer ----------
    if cancer:
        possible.append("рд╕рдВрднрд╛рд╡рд┐рдд рдХреИрдВрд╕рд░")
        organs.append("рд▓рдХреНрд╖рдг рдЕрдиреБрд╕рд╛рд░ рдкреНрд░рднрд╛рд╡рд┐рдд рдЕрдВрдЧ")

    # ---------- Heart Issues ----------
    if heart:
        possible.append("рд╣реГрджрдп / рдХрд╛рд░реНрдбрд┐рдпреЛрд╡реИрд╕реНрдХреБрд▓рд░ рдЬреЛрдЦрд┐рдо")
        organs.append("рд╣реГрджрдп / рдкрд░рд┐рд╕рдВрдЪрд╛рд░реА рддрдВрддреНрд░")

    # ---------- Risk Score ----------
    risk_score = min(100, symptom_count * 5 + (age / 2))
    
    return possible, organs, risk_score

# ---------- SHOW RESULTS ----------
if submitted:
    if not name or not mobile:
        st.error("рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдирд╛рдо рдФрд░ рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВред")
    else:
        results, organs, risk = diagnose(selected_basic, selected_advanced, selected_cancer, selected_heart, age)
        if results:
            st.success(f"**рд╕рдВрднрд╛рд╡рд┐рдд рд╕реНрдерд┐рддрд┐рдпрд╛рдБ:**")
            for r, o in zip(results, organs):
                st.write(f"ЁЯФ╕ {r} тЖТ рд╕рдВрднрд╛рд╡рд┐рдд рдЕрдВрдЧ / рдкреНрд░рдгрд╛рд▓реА: {o}")
            st.info(f"**рдЕрдиреБрдорд╛рдирд┐рдд рдЬреЛрдЦрд┐рдо рд╕реНрдХреЛрд░:** {risk:.1f}%")
        else:
            st.info("рдЪрдпрдирд┐рдд рд▓рдХреНрд╖рдгреЛрдВ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдХреЛрдИ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд░реЛрдЧ рд╕рдВрдХреЗрдд рдирд╣реАрдВ рдорд┐рд▓рд╛ред")

        # ---------- SAVE DATA TO GOOGLE SHEET ----------
        data = [
            name, age, gender, mobile, bp, diabetes, heart, location,
            ", ".join(selected_basic + selected_advanced + selected_cancer + selected_heart),
            ", ".join(results), ", ".join(organs), f"{risk:.1f}%"
        ]
        sheet.append_row(data)
        st.success("тЬЕ рдЖрдкрдХреА рдЬрд╛рдирдХрд╛рд░реА рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдк рд╕реЗ рд░рд┐рдХреЙрд░реНрдб рдХрд░ рджреА рдЧрдИ рд╣реИред")

# ---------- FOOTER ----------
st.markdown("---")
st.caption("тЪая╕П рдпрд╣ рдЯреВрд▓ рдХреЗрд╡рд▓ рд╢реИрдХреНрд╖рд┐рдХ / рдбреЗрдореЛ рдЙрджреНрджреЗрд╢реНрдпреЛрдВ рдХреЗ рд▓рд┐рдП рд╣реИред рдпрд╣ рдкреЗрд╢реЗрд╡рд░ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рд╕рд▓рд╛рд╣ рдХрд╛ рд╡рд┐рдХрд▓реНрдк рдирд╣реАрдВ рд╣реИред")

